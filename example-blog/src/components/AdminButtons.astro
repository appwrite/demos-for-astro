---
import ModalDelete from "./ModalDelete.astro";

// Notice: You don't need to send the full post string
// but I wanted to show how you can use the data from
// post in the delete dialog to build both the dialog
// as well as trigger the action.
interface Props {
  poststring: string;
}
const { poststring } = Astro.props;
const post = JSON.parse(poststring);
---

<section class="adminButtons" style="display: none">
  <div class="u-flex u-gap-8">
    <ModalDelete poststring={poststring}>
      <span class="icon-trash" aria-hidden="true"></span>
      <span class="text">Delete</span>
    </ModalDelete>
    <a
      class="button is-secondary"
      href={`/posts/edit?id=${post.$id}`}
      aria-label="Edit Post"
    >
      <span class="icon-pencil" aria-hidden="true"></span>
      <span class="text">Edit</span>
    </a>
  </div>
</section>

<script>
  import { isAuthor } from "../lib/appwrite";

  // Show Buttons if user is an admin
  isAuthor.subscribe((isAuthor) => {
    const authorButtonsElements: NodeListOf<HTMLElement> | null =
      document.querySelectorAll(".adminButtons");
    if (!authorButtonsElements) return;
    if (isAuthor) {
      Array.from(authorButtonsElements).map((b) => (b.style.display = "block"));
    } else {
      Array.from(authorButtonsElements).map((b) => (b.style.display = "none"));
    }
  });
</script>
<style>
  button {
    width: 3rem;
    height: 3rem;
    display: flex;
    cursor: pointer;
  }
  .adminButtons {
    position: absolute;
    top: 0;
    right: 0;
  }
</style>
